{"version":3,"sources":["components/BodyContent/body.module.css","components/BodyContent/AnimeCard.tsx","logo.svg","components/BodyContent/BodyContainer.tsx","components/Header/index.tsx","components/Header/SearchInput.tsx","components/Header/UserLoginButton.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Header/header.module.css"],"names":["module","exports","Meta","Card","PureComponent","Content","Layout","sendMessage","notification","info","message","description","BodyContainer","this","props","children","btnText","showLogo","className","src","logo","alt","onClick","icon","SendOutlined","Component","Header","HeaderContainer","styles","appHeader","logoText","siteName","headerContent","defaultProps","hasLogoIcon","SearchInput","placeholderText","placeholder","suffix","SearchOutlined","searchIcon","UserLoginButton","state","modalVisible","textValue","openModal","setState","closeModal","onSubmit","onLogin","onChangeValue","type","UserOutlined","title","visible","onCancel","onOk","prefix","onPressEnter","onChange","event","target","value","Footer","App","user","undefined","userLogin","username","success","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf7cdf13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLogo\":\"body_appLogo__2gYRG\",\"app-logo-spin\":\"body_app-logo-spin__oU0RF\",\"appContent\":\"body_appContent__2e0RD\"};","import { Card } from \"antd\";\nimport { PureComponent, ReactNode } from \"react\";\n\nimport { Anime } from \"../../services/anime-service\";\n\nconst { Meta } = Card;\nexport default class AnimeCard extends PureComponent<{ data: Anime }> {\n  render(): ReactNode {\n    const {\n      data: {\n        attributes: { titles, posterImage, canonicalTitle, startDate },\n      },\n    } = this.props;\n    return (\n      <Card\n        hoverable\n        style={{ width: 240 }}\n        cover={<img src={posterImage.small} alt={\"poster\"} />}\n        title={canonicalTitle}>\n        <Meta title={titles.ja_jp} description={startDate.toLocaleString()} />\n      </Card>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./body.module.css\";\n\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { Button, Divider, Layout, notification } from \"antd\";\nimport React, { Component, PropsWithChildren, ReactNode } from \"react\";\n\nimport logo from \"../../logo.svg\";\n\ninterface ContainerProps {\n  showLogo: boolean;\n  btnText?: string;\n}\n\nconst { Content } = Layout;\nconst sendMessage = () =>\n  notification.info({\n    message: \"Hello, world!\",\n    description: \"This is a greeting message sent from the moon\",\n  });\n\n/**\n * Class of Body Container, including all children components in the body\n * Using PropsWithChildren to include the prop \"children\" inside the props\n */\nexport default class BodyContainer extends Component<PropsWithChildren<ContainerProps>> {\n  render(): ReactNode {\n    const { children, btnText, showLogo } = this.props;\n    return (\n      <Content className=\"appContent\">\n        {showLogo && <img src={logo} className=\"appLogo\" alt=\"logo\" />}\n        <Divider>Main Content</Divider>\n        <Button onClick={sendMessage} icon={<SendOutlined />}>\n          {btnText ?? \"Send me a message\"}\n        </Button>\n        {/* Show other children components included */}\n        {children}\n      </Content>\n    );\n  }\n}\n","import { Layout } from \"antd\";\nimport React, { PureComponent, ReactNode } from \"react\";\n\nimport { siteName } from \"../../assets/appConfig.json\";\nimport styles from \"./header.module.css\";\n\ninterface HeaderProps {\n  hasLogoIcon: boolean;\n}\n\nconst { Header } = Layout;\nclass HeaderContainer extends PureComponent<HeaderProps> {\n  static defaultProps: HeaderProps = {\n    hasLogoIcon: true,\n  };\n\n  render(): ReactNode {\n    const { children } = this.props;\n    return (\n      <Header className={styles.appHeader}>\n        <div className={styles.logoText}> {siteName} </div>\n        <div className={styles.headerContent}>{children}</div>\n      </Header>\n    );\n  }\n}\n\nexport default HeaderContainer;\n","import { SearchOutlined } from \"@ant-design/icons\";\nimport { Input } from \"antd\";\nimport { PureComponent, ReactNode } from \"react\";\n\nimport styles from \"./header.module.css\";\n\ninterface SearchInputProps {\n  placeholderText?: string;\n}\nexport default class SearchInput extends PureComponent<SearchInputProps> {\n  render(): ReactNode {\n    const { placeholderText } = this.props;\n    return (\n      <Input placeholder={placeholderText ?? \"Search data\"} suffix={<SearchOutlined className={styles.searchIcon} />} />\n    );\n  }\n}\n","import { UserOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Modal } from \"antd\";\nimport { PureComponent, ReactNode } from \"react\";\n\ninterface UserLoginButtonState {\n  modalVisible: boolean;\n  textValue: string;\n}\n\ninterface UserLoginButtonStateProps {\n  onLogin: (username: string) => void;\n}\nexport default class UserLoginButton extends PureComponent<UserLoginButtonStateProps, UserLoginButtonState> {\n  state: UserLoginButtonState = {\n    modalVisible: false,\n    textValue: \"\",\n  };\n  private openModal = () => this.setState({ modalVisible: true });\n  private closeModal = () => this.setState({ modalVisible: false });\n  private onSubmit = () => {\n    this.closeModal();\n    this.props.onLogin(this.state.textValue);\n  };\n  private onChangeValue = (textValue: string) => this.setState({ textValue });\n  render(): ReactNode {\n    const { modalVisible } = this.state;\n    return (\n      <>\n        <Button type={\"primary\"} icon={<UserOutlined />} onClick={this.openModal}>\n          Login\n        </Button>\n        <Modal title=\"Login to your account\" visible={modalVisible} onCancel={this.closeModal} onOk={this.onSubmit}>\n          <Input\n            placeholder=\"Username\"\n            prefix={<UserOutlined />}\n            onPressEnter={this.onSubmit}\n            onChange={event => this.onChangeValue(event.target.value)}\n          />\n        </Modal>\n      </>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport { Layout, message } from \"antd\";\nimport { PureComponent, ReactNode } from \"react\";\n\nimport { BodyContent } from \"./components/BodyContent\";\nimport HeaderContainer from \"./components/Header\";\nimport SearchInput from \"./components/Header/SearchInput\";\nimport UserLoginButton from \"./components/Header/UserLoginButton\";\n\nconst { Footer } = Layout;\n\ninterface AppState {\n  user?: string;\n}\n\nexport default class App extends PureComponent {\n  state: AppState = {\n    user: undefined,\n  };\n  private userLogin = (username: string) => {\n    this.setState({ user: username });\n    message.success(`Login successfully: ${username}`);\n  };\n\n  render(): ReactNode {\n    return (\n      <Layout>\n        <HeaderContainer>\n          <SearchInput placeholderText={\"search anime\"} />\n          <UserLoginButton onLogin={this.userLogin} />\n        </HeaderContainer>\n        <BodyContent showLogo />\n        <Footer className=\"appFooter\">Footer</Footer>\n      </Layout>\n    );\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"header_appHeader__F5fdw\",\"logoText\":\"header_logoText__SpnXd\",\"headerContent\":\"header_headerContent__cFCsQ\",\"searchIcon\":\"header_searchIcon__1DdU8\"};"],"sourceRoot":""}